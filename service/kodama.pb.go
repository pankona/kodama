// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kodama.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrCode int32

const (
	ErrCode_OK      ErrCode = 0
	ErrCode_BUSY    ErrCode = 1
	ErrCode_GENERIC ErrCode = 100
)

var ErrCode_name = map[int32]string{
	0:   "OK",
	1:   "BUSY",
	100: "GENERIC",
}
var ErrCode_value = map[string]int32{
	"OK":      0,
	"BUSY":    1,
	"GENERIC": 100,
}

func (x ErrCode) String() string {
	return proto.EnumName(ErrCode_name, int32(x))
}
func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_kodama_072cfb4d2d0d703e, []int{0}
}

type Job struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_kodama_072cfb4d2d0d703e, []int{0}
}
func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (dst *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(dst, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_kodama_072cfb4d2d0d703e, []int{1}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Error struct {
	ErrCode              ErrCode  `protobuf:"varint,1,opt,name=errCode,proto3,enum=service.ErrCode" json:"errCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_kodama_072cfb4d2d0d703e, []int{2}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (dst *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(dst, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetErrCode() ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return ErrCode_OK
}

func init() {
	proto.RegisterType((*Job)(nil), "service.Job")
	proto.RegisterType((*Empty)(nil), "service.Empty")
	proto.RegisterType((*Error)(nil), "service.Error")
	proto.RegisterEnum("service.ErrCode", ErrCode_name, ErrCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobQueueClient is the client API for JobQueue service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobQueueClient interface {
	Push(ctx context.Context, in *Job, opts ...grpc.CallOption) (*Error, error)
	Pop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Job, error)
}

type jobQueueClient struct {
	cc *grpc.ClientConn
}

func NewJobQueueClient(cc *grpc.ClientConn) JobQueueClient {
	return &jobQueueClient{cc}
}

func (c *jobQueueClient) Push(ctx context.Context, in *Job, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/service.JobQueue/push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobQueueClient) Pop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/service.JobQueue/pop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobQueueServer is the server API for JobQueue service.
type JobQueueServer interface {
	Push(context.Context, *Job) (*Error, error)
	Pop(context.Context, *Empty) (*Job, error)
}

func RegisterJobQueueServer(s *grpc.Server, srv JobQueueServer) {
	s.RegisterService(&_JobQueue_serviceDesc, srv)
}

func _JobQueue_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Job)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobQueueServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.JobQueue/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobQueueServer).Push(ctx, req.(*Job))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobQueue_Pop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobQueueServer).Pop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.JobQueue/Pop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobQueueServer).Pop(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobQueue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.JobQueue",
	HandlerType: (*JobQueueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "push",
			Handler:    _JobQueue_Push_Handler,
		},
		{
			MethodName: "pop",
			Handler:    _JobQueue_Pop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kodama.proto",
}

func init() { proto.RegisterFile("kodama.proto", fileDescriptor_kodama_072cfb4d2d0d703e) }

var fileDescriptor_kodama_072cfb4d2d0d703e = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x86, 0x13, 0xfb, 0xb1, 0x75, 0x5a, 0xca, 0x32, 0x27, 0xe9, 0xa9, 0x2c, 0xa8, 0x25, 0x87,
	0x1c, 0x92, 0x7f, 0x60, 0x58, 0xc4, 0x08, 0x8a, 0x11, 0x0f, 0x39, 0x66, 0xb3, 0x0b, 0x06, 0x89,
	0xb3, 0x4c, 0x12, 0xc1, 0x7f, 0x2f, 0xc6, 0x28, 0xf1, 0xfa, 0xcc, 0x3b, 0xcf, 0xcc, 0x0b, 0xbb,
	0x37, 0xb2, 0x55, 0x5b, 0xc5, 0x9e, 0xa9, 0x27, 0x14, 0x9d, 0xe3, 0x8f, 0xa6, 0x76, 0xea, 0x1a,
	0x16, 0x39, 0x19, 0x3c, 0xc2, 0xd6, 0xba, 0xae, 0xe6, 0xc6, 0xf7, 0x0d, 0xbd, 0x5f, 0x84, 0xc7,
	0xf0, 0x74, 0x5e, 0xcc, 0x91, 0x12, 0xb0, 0xd2, 0xad, 0xef, 0x3f, 0x55, 0x0a, 0x2b, 0xcd, 0x4c,
	0x8c, 0x11, 0x08, 0xc7, 0x9c, 0x91, 0x75, 0x63, 0x7e, 0x9f, 0xc8, 0x78, 0xb2, 0xc6, 0xfa, 0x87,
	0x17, 0xbf, 0x81, 0xe8, 0x04, 0x62, 0x62, 0xb8, 0x86, 0xb3, 0xc7, 0x7b, 0x19, 0xe0, 0x06, 0x96,
	0x37, 0x2f, 0xcf, 0xa5, 0x0c, 0x71, 0x0b, 0xe2, 0x56, 0x3f, 0xe8, 0xe2, 0x2e, 0x93, 0x36, 0x29,
	0x61, 0x93, 0x93, 0x79, 0x1a, 0xdc, 0xe0, 0xf0, 0x0a, 0x96, 0x7e, 0xe8, 0x5e, 0x71, 0xf7, 0x27,
	0xce, 0xc9, 0x1c, 0xf6, 0xf3, 0x33, 0xc4, 0x2a, 0xc0, 0x4b, 0x58, 0x78, 0xf2, 0x38, 0x1b, 0x7c,
	0x7f, 0x7a, 0xf8, 0xb7, 0xa6, 0x02, 0xb3, 0x1e, 0xbb, 0xa7, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x4a, 0xbf, 0xb2, 0x07, 0x0b, 0x01, 0x00, 0x00,
}
